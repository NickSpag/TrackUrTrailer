// This file has been autogenerated from a class added in the UI designer.

using System;

using Foundation;
using UIKit;
using System.Security.AccessControl;
using TrackUrTrailer.Standard;

namespace TrackUrTrailer.iOS
{
    public partial class MainTabBarViewController : UITabBarController
    {
        public MainTabBarViewController(IntPtr handle) : base(handle)
        {
        }

        public override void PrepareForSegue(UIStoryboardSegue segue, NSObject sender)
        {
            LoadTabItemsForRole();

            base.PrepareForSegue(segue, sender);
        }

        private void LoadTabItemsForRole()
        {
            UIViewController[] tabControllers = new UIViewController[] { };

            switch (Users.ActiveRole)
            {
                case UserRole.Customer:
                    tabControllers[0] = ControllerForId(Module.Orders, 0);
                    tabControllers[1] = ControllerForId(Module.Orders, 1);
                    tabControllers[2] = ControllerForId(Module.Orders, 2);
                    break;
                case UserRole.Operations:
                    tabControllers[0] = ControllerForId(Module.DeliveryList, 0);
                    tabControllers[1] = ControllerForId(Module.Map, 1);
                    tabControllers[2] = ControllerForId(Module.Orders, 2);
                    break;
                case UserRole.Corporate:
                    tabControllers[0] = ControllerForId(Module.Orders, 0);
                    tabControllers[1] = ControllerForId(Module.Map, 1);
                    break;
                default:
                    break;
                case UserRole.Driver:
                    throw new Exception("Drivers dont have tab controls");
            }

            this.ViewControllers = tabControllers;

            UIViewController ControllerForId(Module module, nint tag)
            {
                var tabBarItem = new UITabBarItem(module.Name(), ForModule(module), tag);

                var storyboard = UIStoryboard.FromName("Main", null);
                var controller = storyboard.InstantiateViewController(module.StoryBoardId());
                controller.TabBarItem = tabBarItem;

                return controller;
            }
        }

        public static UIImage ForModule(Module module)
        {
            switch (module)
            {
                case Module.DeliveryList:
                    return UIImage.FromBundle("");
                case Module.Map:
                    return UIImage.FromBundle("Map");
                case Module.Orders:
                    return UIImage.FromBundle("Boxes");
                default:
                    return UIImage.FromBundle("gas");
            }
        }
    }
}
